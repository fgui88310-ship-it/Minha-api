import express from 'express';
import axios from 'axios';
import * as cheerio from 'cheerio';

const router = express.Router();

router.get('/', async (req, res) => {
  // Optional query parameter for number of random memes (default: 1)
  const count = parseInt(req.query.count) || 1;
  if (count < 1 || count > 50) { // Limit to prevent abuse
    return res.status(400).json({ error: 'O parâmetro count deve estar entre 1 e 50' });
  }

  try {
    // Fetch the Memedroid homepage
    const response = await axios.get('https://pt.memedroid.com/', {
      headers: {
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0 Safari/537.36',
        'Accept-Language': 'pt-BR,pt;q=0.9,en-US;q=0.8,en;q=0.7',
        'Referer': 'https://www.google.com/'
      },
      timeout: 10000
    });

    const html = response.data;

    // Parse HTML with cheerio
    const $ = cheerio.load(html);

    // Find the script containing MMDTrendingGalleryHandler
    let memeData = [];
    $('script').each((i, elem) => {
      const scriptContent = $(elem).html();
      if (scriptContent.includes('MMDTrendingGalleryHandler')) {
        // Extract JSON array (e.g., [{...}])
        const jsonMatch = scriptContent.match(/\[({.*?})\]/s);
        if (jsonMatch && jsonMatch[0]) {
          try {
            memeData = JSON.parse(jsonMatch[0]);
          } catch (parseError) {
            console.error('Erro ao parsear JSON dos memes:', parseError.message);
          }
        }
      }
    });

    if (memeData.length === 0) {
      return res.status(404).json({ error: 'Nenhum meme encontrado na página' });
    }

    // Select random memes
    const shuffledMemes = memeData.sort(() => Math.random() - 0.5); // Shuffle array
    const selectedMemes = shuffledMemes.slice(0, count).map(meme => ({
      title: meme.title || 'Sem título',
      link: meme.url
    }));

    // Return JSON response
    res.status(200).json({
      memes: selectedMemes
    });

  } catch (err) {
    console.error('[MEMEDROID] Erro ao processar memes:', err.message);
    res.status(500).json({ error: 'Falha ao processar memes' });
  }
});

export default router;