import { execSync } from 'child_process';
import fs from 'fs';
import { PATHS } from '../config.js';

export async function downloadInstagramMedia(url) {
  // Limpa a URL (remove par√¢metros)
  const cleanUrl = url.split('?')[0];
  console.log('üîç [DOWNLOAD] URL limpa:', cleanUrl);

  // Verifica se existe o arquivo de cookies
  if (!fs.existsSync(PATHS.cookiesInsta)) {
    console.error('‚ùå [COOKIES] Arquivo de cookies n√£o encontrado');
    return null;
  }
  
  const outputTemplate = `${PATHS.downloadsDir}/%(id)s.%(ext)s`;

  // Monta o comando do yt-dlp para baixar v√≠deo e √°udio separados
  const command = [
    `yt-dlp`,
    `"${cleanUrl}"`,
    `--cookies "${PATHS.cookiesInsta}"`,
    `-o "${outputTemplate}"`,            // caminho e nome do arquivo
    `--format "bestvideo+bestaudio/best"`, // melhor v√≠deo e √°udio
    `--merge-output-format mp4`,         // junta v√≠deo e √°udio em mp4
    `--no-progress`
  ].join(' ');

  try {
    console.time('yt-dlp-download');
    execSync(command, { stdio: 'inherit', timeout: 60000 }); // exibe progressos no console
    console.timeEnd('yt-dlp-download');
    console.log('‚úÖ [DOWNLOAD] Conclu√≠do com sucesso!');
    return true;
  } catch (error) {
    console.error('‚ùå [DOWNLOAD] Falha ao baixar m√≠dia:', error.message);
    return null;
  }
}